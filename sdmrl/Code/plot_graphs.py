import numpy as np
import matplotlib.pyplot as plt

# Data
models = ["PPO", "SAC", "TD3", "A2C", "DDPG"]

profits = {
    "PPO": np.array([59.85623332234064, 93.30550768777022, 67.43854027854476, 81.20845437575242, 71.47267851699226, 80.74446732226606, 48.22148536349177, 79.87233993489795, 83.11532382223801, 66.48133058120781, 96.84877500871195, 70.64794609403805, 58.67686011764041, 97.64567289037429, 88.56782161033018, 102.57202885189375, 75.73369247518012, 106.75862919216664, 75.5723756796967, 101.89717352359588]),
    "SAC": np.array([2503.2452862632217, 2866.794249433071, 2624.5243895279873, 2666.437309424675, 2537.7895031381786, 2618.9077882512984, 2980.276325561096, 2768.291495669905, 2760.1934510331967, 2604.5974896986813, 1593.1763847429181, 2702.2734486203635, 2593.6587025701833, 2380.746938454957, 2801.571514830613, 2491.2155027729377, 2591.987698525716, 2496.4140145397732, 2497.5761259299006, 2489.4571285636757]),
    "TD3": np.array([2741.136741946242, 2689.573720041849, 2792.908780757255, 2651.755907249086, 2776.3455329963194, 2841.6186064324825, 2716.932781331138, 2726.8602180861562, 2760.461979992934, 2775.6827983240023, 2756.1958651931905, 2755.8219409129824, 2845.125528042877, 2654.3702095653216, 2743.090674792509, 2806.914986178988, 0.0, 2639.802993322378, 2738.310106152659, 2640.1789458532494]),
    "A2C": np.array([180.52624555080104, 116.52378244800866, 160.50042726620626, 78.94220375180726, 93.88014223903971, 119.00374823828136, 155.20022106213207, 156.74096616169356, 74.29443496736775, 190.1725095145007, 137.21282152481922, 118.56746097567839, 107.31310605187784, 154.19250797951813, 111.06620579648825, 112.47268667537669, 104.270552691551, 37.939867179593946, 118.98266250145802, 114.60657441936876]),
    "DDPG": np.array([0.0, 266.2774647090538, 2674.780808610214, 0.0, 251.4867067693413, 0.0, 0.0, 0.0, 0.0, 2767.5059549500666, 0.0, 2754.693625933853, 0.0, 2773.4217289743365, 280.9596581371776, 0.0, 2837.3877009441235, 0.0, 0.0, 0.0])
}

demand_fulfilled = {
    "PPO": np.array([0.0046415315, 0.004864528, 0.0014888204, 0.002759523, 0.0024705506, 0.0047554504, 0.0042666504, 0.0047746897, 0.0032458, 0.0031131327, 0.0037125964, 0.0014815036, 0.0035738002, 0.00656705, 0.005313222, 0.0019853124, 0.0036889897, 0.0061455364, 0.0029287834, 0.0041717924]),
    "SAC": np.array([0.28219256, 0.44547802, 0.4178391, 0.4583313, 0.38867387, 0.3798143, 0.46201319, 0.43952927, 0.42240533, 0.3805463, 0.068880826, 0.44414645, 0.4662819, 0.35580269, 0.448498, 0.28235486, 0.41010323, 0.40926284, 0.38153413, 0.37030262]),
    "TD3": np.array([0.4821748, 0.49024147, 0.48115826, 0.47824883, 0.4800126, 0.48685747, 0.48783094, 0.47711268, 0.47296447, 0.47472596, 0.48871994, 0.4799326, 0.48368979, 0.48671848, 0.48422617, 0.4873084, 0.0, 0.4765002, 0.47468156, 0.48398724]),
    "A2C": np.array([0.018863562, 0.028573025, 0.0321138, 0.012213889, 0.0065933215, 0.015572986, 0.029118279, 0.028781656, 0.022408089, 0.030160874, 0.028938543, 0.031075787, 0.015804304, 0.025276547, 0.015272421, 0.021130405, 0.009486303, 0.040058542, 0.011223431, 0.02643798]),
    "DDPG": np.array([0.0, 0.9557713, 0.47226852, 0.0, 0.9539858, 0.0, 0.0, 0.0, 0.0, 0.4840536, 0.0, 0.4801386, 0.0, 0.48447347, 0.95542, 0.0, 0.4980715, 0.0, 0.0, 0.0])
}

# Compute balanced stability score using coefficient of variation
balanced_stability_scores = {
    model: 1 / (1 + (np.std(profits[model]) / np.mean(profits[model])))
    for model in models
}
print(balanced_stability_scores)
# Plot profit and demand fulfilled comparisons
# fig, ax = plt.subplots(2, 1, figsize=(10, 10))
#
# ax[0].boxplot([profits[m] for m in models], labels=models)
# ax[0].set_title("Profit Comparison")
# ax[0].set_ylabel("Profit")
#
# ax[1].boxplot([demand_fulfilled[m] for m in models], labels=models)
# ax[1].set_title("Demand Fulfilled Comparison")
# ax[1].set_ylabel("Demand Fulfilled")
#
# plt.tight_layout()
# plt.show()
#
# # Plot stability scores
# plt.figure(figsize=(10, 5))
# plt.bar(stability_scores.keys(), stability_scores.values())
# plt.title("Stability Score Comparison")
# plt.ylabel("Stability Score (1/Variance)")
# plt.show()
